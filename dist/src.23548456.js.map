{"version":3,"sources":["Cell.js","constants.js","Grid.js","Tile.js","index.js"],"names":["Cell","i","j","x","y","tile","mergeTile","prototype","setTile","setCoordinates","canAccept","value","setMergeTile","mergeTiles","setValue","isMergeTile","remove","module","exports","GRID_SIZE","MAX_POWER_OF_2","BACKGROUND_HUE_LIST","require","_require","Grid","gameBoard","setUpGameBoard","style","setProperty","cell","document","createElement","classList","add","append","createTileList","cells","Array","from","length","_","Math","floor","formCellsByRow","formCellsByColumn","getRandomEmptyCell","emptyCells","filter","_ref","random","cellsByRow","reduce","acc","_cell$y","cellsByColumn","_cell$x","Tile","tileElement","waitForEvent","_this","log2","backgroundLightness","textLightness","backgroundHue","concat","textContent","addEventListener","once","event","_this2","Promise","resolve","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","reject","invoke","record","result","_typeof","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","isArray","_unsupportedIterableToArray","F","s","n","e","_e","f","normalCompletion","didErr","step","_e2","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","test","len","arr2","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","game","querySelector","scoreElement","bestScoreElement","alertContainer","score","bestScore","Number","localStorage","getItem","touchStartX","touchStartY","touchEndX","touchEndY","startGame","startInteraction","_e$key","_e$key$slice","handlePlayMoves","toLowerCase","console","log","touches","clientX","clientY","handleTouchMove","handleSwipe","removeEventListener","angle","atan2","PI","_x","_handlePlayMoves","_callee","action","newTile","_callee$","_context","t0","canMoveUp","moveUp","canMoveDown","moveDown","canMoveLeft","moveLeft","canMoveRight","moveRight","max","setItem","animationend","gameOver","canMove","map","column","row","_step","_iterator","slideTiles","all","flatMap","lastValidCell","transitionend","alert","className","handleRestart","_alertContainer$query","querySelectorAll","restartButton","onclick"],"mappings":"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","file":"src.23548456.js","sourceRoot":"..\\src","sourcesContent":["function Cell(i, j) {\r\n  this.x = i;\r\n  this.y = j;\r\n  this.tile = null;\r\n  this.mergeTile = null;\r\n}\r\n\r\nCell.prototype.setTile = function (tile) {\r\n  this.tile = tile;\r\n  if (!tile) return;\r\n  tile.setCoordinates(this.x, this.y);\r\n};\r\n\r\nCell.prototype.canAccept = function (tile) {\r\n  return (\r\n    this.tile == null ||\r\n    (this.mergeTile == null && this.tile.value === tile.value)\r\n  );\r\n};\r\n\r\nCell.prototype.setTile = function (tile) {\r\n  this.tile = tile;\r\n  if (!tile) return;\r\n  tile.setCoordinates(this.x, this.y);\r\n};\r\n\r\nCell.prototype.setMergeTile = function (mergeTile) {\r\n  this.mergeTile = mergeTile;\r\n  mergeTile.setCoordinates(this.x, this.y);\r\n};\r\n\r\nCell.prototype.mergeTiles = function () {\r\n  if (this.mergeTile == null) return 0;\r\n  this.tile.setValue(this.tile.value * 2, (isMergeTile = true));\r\n  this.mergeTile.remove();\r\n  this.mergeTile = null;\r\n\r\n  return this.tile.value;\r\n};\r\n\r\nmodule.exports = Cell;\r\n","const GRID_SIZE = 4;\r\nconst MAX_POWER_OF_2 = 10;\r\nconst BACKGROUND_HUE_LIST = [\"200deg\", \"100deg\", \"300deg\"];\r\n\r\nmodule.exports = {\r\n  GRID_SIZE,\r\n  MAX_POWER_OF_2,\r\n  BACKGROUND_HUE_LIST\r\n};\r\n","const Cell = require(\"./Cell.js\");\r\nconst { GRID_SIZE } = require(\"./constants.js\");\r\n\r\nfunction Grid(gameBoard) {\r\n  return {\r\n    gameBoard,\r\n    setUpGameBoard() {\r\n      this.gameBoard.style.setProperty(\"--grid-size\", GRID_SIZE);\r\n\r\n      for (let i = 0; i < GRID_SIZE * GRID_SIZE; i++) {\r\n        const cell = document.createElement(\"cell\");\r\n        cell.classList.add(\"cell\");\r\n        this.gameBoard.append(cell);\r\n      }\r\n\r\n      return this;\r\n    },\r\n\r\n    createTileList() {\r\n      this.cells = Array.from(\r\n        { length: GRID_SIZE * GRID_SIZE },\r\n        (_, i) => new Cell(i % GRID_SIZE, Math.floor(i / GRID_SIZE))\r\n      );\r\n\r\n      this.formCellsByRow();\r\n      this.formCellsByColumn();\r\n      return this;\r\n    },\r\n\r\n    getRandomEmptyCell() {\r\n      const emptyCells = this.cells.filter(({ tile }) => tile == null);\r\n      return emptyCells[Math.floor(Math.random() * emptyCells.length)];\r\n    },\r\n\r\n    formCellsByRow() {\r\n      this.cellsByRow = this.cells.reduce((acc, cell) => {\r\n        acc[cell.y] ||= [];\r\n        acc[cell.y][cell.x] = cell;\r\n        return acc;\r\n      }, []);\r\n    },\r\n\r\n    formCellsByColumn() {\r\n      this.cellsByColumn = this.cells.reduce((acc, cell) => {\r\n        acc[cell.x] ||= [];\r\n        acc[cell.x][cell.y] = cell;\r\n        return acc;\r\n      }, []);\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = Grid;\r\n","const { MAX_POWER_OF_2, BACKGROUND_HUE_LIST } = require(\"./constants.js\");\r\n\r\nfunction Tile(gameBoard) {\r\n  this.tileElement = document.createElement(\"div\");\r\n  this.waitForEvent(\"animationend\");\r\n  this.tileElement.classList.add(\"tile\");\r\n  this.setValue(Math.random() > 0.5 ? 2 : 4);\r\n  gameBoard.append(this.tileElement);\r\n}\r\n\r\nTile.prototype.setCoordinates = function (x, y) {\r\n  this.tileElement.style.setProperty(\"--x\", x);\r\n  this.tileElement.style.setProperty(\"--y\", y);\r\n};\r\n\r\nTile.prototype.setValue = function (value, isMergeTile) {\r\n  const log2 = Math.log2(value);\r\n  const backgroundLightness = Math.floor(\r\n    (1 - (((log2 - 1) % (MAX_POWER_OF_2 - 1)) + 1) / MAX_POWER_OF_2) * 100\r\n  );\r\n\r\n  const textLightness = backgroundLightness > 50 ? 10 : 90;\r\n  const backgroundHue = BACKGROUND_HUE_LIST[Math.floor(log2 / MAX_POWER_OF_2)];\r\n\r\n  this.tileElement.style.setProperty(\r\n    \"--background-lightness\",\r\n    `${backgroundLightness}%`\r\n  );\r\n  this.tileElement.style.setProperty(\"--text-lightness\", `${textLightness}%`);\r\n  this.tileElement.style.setProperty(\"--background-hue\", backgroundHue);\r\n  this.tileElement.textContent = this.value = value;\r\n\r\n  if (!isMergeTile) return;\r\n\r\n  this.tileElement.classList.add(\"merge-tile\");\r\n  this.tileElement.addEventListener(\r\n    \"transitionend\",\r\n    () => this.tileElement.classList.remove(\"merge-tile\"),\r\n    { once: true }\r\n  );\r\n};\r\n\r\nTile.prototype.remove = function () {\r\n  this.tileElement.remove();\r\n};\r\n\r\nTile.prototype.waitForEvent = function (event) {\r\n  this[event] = new Promise((resolve) =>\r\n    this.tileElement.addEventListener(\r\n      event,\r\n      () => ((this[event] = null), resolve()),\r\n      { once: true }\r\n    )\r\n  );\r\n};\r\n\r\nmodule.exports = Tile;\r\n","const Grid = require(\"./Grid.js\");\r\nconst Tile = require(\"./Tile.js\");\r\n\r\nconst gameBoard = document.querySelector(\".game-board\");\r\nconst scoreElement = document.querySelector(\"[data-score]\");\r\nconst bestScoreElement = document.querySelector(\"[data-best-score]\");\r\nconst alertContainer = document.querySelector(\".alert-container\");\r\nlet game;\r\nlet score = 0;\r\nlet bestScore = Number(localStorage.getItem(\"bestScore\"));\r\nlet touchStartX = null;\r\nlet touchStartY = null;\r\nlet touchEndX = null;\r\nlet touchEndY = null;\r\n\r\nbestScoreElement.textContent = \"Best: \" + bestScore;\r\n\r\nfunction startGame() {\r\n  game = Grid(gameBoard);\r\n  game.setUpGameBoard().createTileList();\r\n  game.getRandomEmptyCell().setTile(new Tile(gameBoard));\r\n  game.getRandomEmptyCell().setTile(new Tile(gameBoard));\r\n  startInteraction();\r\n}\r\n\r\nfunction startInteraction() {\r\n  document.addEventListener(\r\n    \"keyup\",\r\n    (e) => handlePlayMoves(e.key?.slice(5)?.toLowerCase()),\r\n    { once: true }\r\n  );\r\n  touchStartX = touchStartY = touchEndX = touchEndY = null;\r\n\r\n  gameBoard.addEventListener(\r\n    \"touchstart\",\r\n    (e) => {\r\n      console.log(e);\r\n      touchStartX = e.touches[0].clientX;\r\n      touchStartY = e.touches[0].clientY;\r\n    },\r\n    { once: true }\r\n  );\r\n  gameBoard.addEventListener(\"touchmove\", handleTouchMove);\r\n  gameBoard.addEventListener(\"touchend\", handleSwipe, { once: true });\r\n}\r\n\r\nfunction handleSwipe() {\r\n  gameBoard.removeEventListener(\"touchmove\", handleTouchMove);\r\n\r\n  if (touchStartX == null || touchEndX == null) return;\r\n\r\n  const angle =\r\n    (Math.atan2(touchEndY - touchStartY, touchEndX - touchStartX) * 180) /\r\n    Math.PI;\r\n\r\n  if (angle > -45 && angle <= 45) handlePlayMoves(\"right\");\r\n  else if (angle > 45 && angle <= 135) handlePlayMoves(\"down\");\r\n  else if (angle > -135 && angle <= -45) handlePlayMoves(\"up\");\r\n  else handlePlayMoves(\"left\");\r\n}\r\n\r\nfunction handleTouchMove(e) {\r\n  touchEndX = e.touches[0].clientX;\r\n  touchEndY = e.touches[0].clientY;\r\n}\r\n\r\nasync function handlePlayMoves(action) {\r\n  switch (action) {\r\n    case \"up\":\r\n      if (!canMoveUp()) return startInteraction();\r\n      await moveUp();\r\n      break;\r\n    case \"down\":\r\n      if (!canMoveDown()) return startInteraction();\r\n      await moveDown();\r\n      break;\r\n    case \"left\":\r\n      if (!canMoveLeft()) return startInteraction();\r\n      await moveLeft();\r\n      break;\r\n    case \"right\":\r\n      if (!canMoveRight()) return startInteraction();\r\n      await moveRight();\r\n      break;\r\n    default:\r\n      return startInteraction();\r\n  }\r\n\r\n  score += game.cells.reduce((acc, cell) => acc + cell.mergeTiles(), 0);\r\n  bestScore = Math.max(bestScore, score);\r\n  bestScoreElement.textContent = \"Best: \" + bestScore;\r\n  scoreElement.textContent = \"Score: \" + score;\r\n  localStorage.setItem(\"bestScore\", bestScore);\r\n\r\n  const newTile = new Tile(gameBoard);\r\n  game.getRandomEmptyCell().setTile(newTile);\r\n  await newTile.animationend;\r\n\r\n  if (!canMoveUp() && !canMoveDown() && !canMoveLeft() && !canMoveRight())\r\n    return gameOver();\r\n  startInteraction();\r\n}\r\n\r\nfunction canMoveUp() {\r\n  return canMove(game.cellsByColumn);\r\n}\r\n\r\nfunction canMoveDown() {\r\n  return canMove(game.cellsByColumn.map((column) => [...column].reverse()));\r\n}\r\n\r\nfunction canMoveRight() {\r\n  return canMove(game.cellsByRow.map((row) => [...row].reverse()));\r\n}\r\n\r\nfunction canMoveLeft() {\r\n  return canMove(game.cellsByRow);\r\n}\r\n\r\nfunction canMove(cells) {\r\n  for (const row of cells)\r\n    for (let j = 1; j < row.length; j++)\r\n      if (row[j].tile && row[j - 1].canAccept(row[j].tile)) return true;\r\n\r\n  return false;\r\n}\r\n\r\nfunction moveUp() {\r\n  return slideTiles(game.cellsByColumn);\r\n}\r\n\r\nfunction moveDown() {\r\n  return slideTiles(game.cellsByColumn.map((column) => [...column].reverse()));\r\n}\r\n\r\nfunction moveLeft() {\r\n  return slideTiles(game.cellsByRow);\r\n}\r\n\r\nfunction moveRight() {\r\n  return slideTiles(game.cellsByRow.map((row) => [...row].reverse()));\r\n}\r\n\r\nfunction slideTiles(cells) {\r\n  return Promise.all(\r\n    cells.flatMap((row) => {\r\n      return row.map((cell, i) => {\r\n        if (!cell.tile || i === 0) return;\r\n        let lastValidCell;\r\n\r\n        for (let j = i - 1; j >= 0; j--) {\r\n          if (!row[j].canAccept(cell.tile)) break;\r\n          lastValidCell = row[j];\r\n        }\r\n\r\n        if (!lastValidCell) return;\r\n\r\n        cell.tile.waitForEvent(\"transitionend\");\r\n        const { transitionend } = cell.tile;\r\n        if (lastValidCell.tile) lastValidCell.setMergeTile(cell.tile);\r\n        else lastValidCell.setTile(cell.tile);\r\n        cell.setTile(null);\r\n        return transitionend;\r\n      });\r\n    })\r\n  );\r\n}\r\n\r\nfunction gameOver() {\r\n  const alert = document.createElement(\"div\");\r\n  alert.className = \"alert\";\r\n  alert.textContent = \"Game Over\";\r\n  alertContainer.append(alert);\r\n}\r\n\r\nstartGame();\r\n\r\nfunction handleRestart() {\r\n  document.querySelectorAll(\".tile\").forEach((tile) => tile.remove());\r\n  document.querySelectorAll(\".cell\").forEach((cell) => cell.remove());\r\n  scoreElement.textContent = \"Score: \" + (score = 0);\r\n  alertContainer.querySelector(\".alert\")?.remove();\r\n\r\n  const restartButton = document.querySelector('[data-key=\"restart\"]');\r\n  restartButton.addEventListener(\r\n    \"animationend\",\r\n    () => restartButton.classList.remove(\"scale\"),\r\n    { once: true }\r\n  );\r\n\r\n  restartButton.classList.add(\"scale\");\r\n  startGame();\r\n}\r\n\r\ndocument.querySelector('[data-key=\"restart\"]').onclick = handleRestart;\r\n"]}